Bootstrap: localimage
From: centos.sif
Stage: build

%setup
  mkdir ${SINGULARITY_ROOTFS}/src/
  # local LDMX-patched GEANT4 sources
  cp -a src/ldmx-geant4 ${SINGULARITY_ROOTFS}/src/ldmx-geant4
  # versions
  cp ldmx.buildvers ${SINGULARITY_ROOTFS}/etc

%post
  source /etc/ldmx.buildvers

  yum -y install centos-release-scl
  yum -y install @development
  yum -y install wget openssl-devel epel-release git
  yum -y install boost-devel
  yum -y install vim
  yum -y install mesa-libGLw-devel.x86_64
  yum -y install emacs
  #yum -y install build-essential zlib1g-dev libbz2-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev libgdbm-dev liblzma-dev tk8.5-dev

  # devtoolset
  if [ "${DEVTOOLSET}" != "S" ]; then
    yum -y install centos-release-scl-rh
    yum -y install devtoolset-${DEVTOOLSET}-gcc devtoolset-${DEVTOOLSET}-gcc-c++
    source /opt/rh/devtoolset-${DEVTOOLSET}/enable
  fi

  mkdir /buildroot
  cd /buildroot

#Make Python

   wget --no-check-certificate https://www.python.org/ftp/python/${PYTHON_VER}/Python-${PYTHON_VER}.tgz
   #xz -d Python-${PYTHON_VER}.tgz
   tar -xzvf Python-${PYTHON_VER}.tgz
   PYTHON_VER_SHORT=${PYTHON_VER} | sed 's|\(.*\)\..*|\1|'
   PYTHON_DIR=/opt/python${PYTHON_VER_SHORT}

   cd Python-${PYTHON_VER}/
   ./configure --prefix=/opt/python${PYTHON_VER_SHORT} --enable-optimizations --with-ensurepip=install --with-cxx-main=gcc --enable-shared

   make $MAKEOPTS && make install
   cd /buildroot

#exit(1)

  export PATH="${PYTHON_DIR}/bin:$PATH"

  #/opt/python/bin/pip3 install --upgrade pip
  pip3 install numpy
  pip3 install scipy
  pip3 install six
  pip3 install uproot
  pip3 install lz4
  #pip3 install zstd
  pip3 install xxhash
  #pip3 install xrootd
  pip3 install xgboost
  pip3 install requests
  pip3 install pandas 

  # Setting up python 3 and additional packages
  #yum -y install rh-python36
  #yum -y install rh-python36-numpy rh-python36-scipy rh-python36-python-tools rh-python36-python-six rh-python36-PyYAML
  #source /opt/rh/rh-python36/enable
  #pip install --upgrade pip
  #pip install numpy-devel
  #pip install uproot
  #pip install lz4
  #sudo pip install zstd
  #pip install xxhash
  ##sudo pip install lzma
  ##sudo pip install xrootd
  #pip install requests
  #pip install pandas
  ##ln -fs /opt/rh/rh-python36/root/bin/python /usr/bin/python

  #mkdir /buildroot
  cd /buildroot

#exit(1)

  # New CMake is needed
  wget https://cmake.org/files/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz
  tar zxvf cmake-$CMAKE_VER.tar.gz
  cd cmake-$CMAKE_VER
  ./bootstrap --prefix=/usr/local
  make $MAKEOPTS
  make install
  cd /buildroot

  # processor optimization flags
  if [ -n "$MARCH" ]; then
    export CFLAGS="-march=$MARCH"
    export CXXFLAGS="-march=$MARCH"
  fi

  # Build Boost
  wget https://dl.bintray.com/boostorg/release/${BOOST_VER}/source/boost_${BOOST_VER//[.]/_}.tar.bz2
  tar -jxvf boost_${BOOST_VER//[.]/_}.tar.bz2
  export BOOST_DIR=/opt/boost-${BOOST_VER//[.]/_}
  cd boost_${BOOST_VER//[.]/_}
  ./bootstrap.sh --prefix=$BOOST_DIR
  ./b2 $MAKEOPTS
  ./b2 install --prefix=$BOOST_DIR --with=all
  cd /buildroot

  # Build xerces
  wget https://downloads.apache.org/xerces/c/3/sources/xerces-c-${XERCES_VER}.tar.bz2
  tar -jxvf xerces-c-${XERCES_VER}.tar.bz2
  export XERCESC_DIR=/opt/xerces-c-$XERCES_VER
  cd xerces-c-${XERCES_VER}
  ./configure --prefix=$XERCESC_DIR
  make $MAKEOPTS
  make install
  cd /buildroot

  # Build GEANT-4
  yum -y install libX11-devel libXmu-devel mesa-libGL-devel mesa-libGLU-devel mesa-libGLw-devel 
  # LDMX uses a custom version of Geant4 that includes modifications to the range 
  # in which the Bertini Cascade model can be used
  mv /src/ldmx-geant4 .
  cd ldmx-geant4
  git checkout tags/$GEANT4_TAG -b $GEANT4_TAG
  mkdir build
  cd build
  export G4DIR=/opt/geant4-$GEANT4_TAG
  cmake -DGEANT4_USE_GDML=ON -DGEANT4_INSTALL_DATA=ON -DXERCESC_ROOT_DIR=$XERCESC_DIR \
    -DGEANT4_USE_OPENGL_X11=ON -DCMAKE_INSTALL_PREFIX=$G4DIR -DGEANT4_USE_SYSTEM_EXPAT=OFF ..
  make $MAKEOPTS
  make install
  cd /buildroot

  # Build ROOT
  ##PYDEVPKG=python-devel
  #PYDEVPKG=python-devel
  #PYCMAKEFLAGS="-Dpython3=ON -DPYTHON_EXECUTABLE=/opt/rh/rh-python36/root/usr/bin/python3.6 -DPYTHON_INCLUDE_DIR=/opt/rh/rh-python36/root/usr/include/python3.6m/ -DPYTHON_LIBRARY=/opt/rh/rh-python36/root/usr/lib64/python3.6m.so"
  PYCMAKEFLAGS="-Dpython3=ON"
  #PYCMAKEFLAGS="-Dpython3=ON -DPYTHON_EXECUTABLE=/opt/rh/rhpython36/root/usr/bin/python"  
  PYBASE=
  if [ "$CENTOS" == 8 ]; then
    PYBASE=3
    PYDEVPKG="python36-devel"
    PYCMAKEFLAGS="-Dpython3=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m/ -DPYTHON_LIBRARY=/usr/lib64/python3.6"
  fi
  yum -y install libXpm-devel libXft-devel libXext-devel gsl-devel fftw-devel blas-devel
  # ${PYDEVPKG} python${PYBASE}-scipy
  wget https://root.cern.ch/download/root_v$ROOTVERSION.source.tar.gz
  tar -zxvf root_v$ROOTVERSION.source.tar.gz
  mkdir root-cmake-build
  cd root-cmake-build
  export ROOTDIR=/opt/root-$ROOTVERSION
  cmake -Dgdml=ON -Dexplicitlink=ON ${PYCMAKEFLAGS} -DCMAKE_INSTALL_PREFIX=$ROOTDIR -Dcxx17=ON ../root-$ROOTVERSION
  make $MAKEOPTS
  make install
  cd /buildroot

# Get ONNX runtime Binaries
  if [ ${ONNX_GPU} == "ON" ]; then
  wget https://github.com/microsoft/onnxruntime/releases/download/v${ONNX_VER}/onnxruntime-linux-x64-gpu-${ONNX_VER}.tgz
  tar zxvf onnxruntime-linux-x64-gpu-${ONNX_VER}.tgz
  mv onnxruntime-linux-x64-gpu-${ONNX_VER} /opt/
  ONNX_DIR=/opt/onnxruntime-linux-x64-gpu-$ONNX_VER
  fi
  if [ ${ONNX_GPU} == "OFF" ]; then
  wget https://github.com/microsoft/onnxruntime/releases/download/v${ONNX_VER}/onnxruntime-linux-x64-${ONNX_VER}.tgz
  tar zxvf onnxruntime-linux-x64-${ONNX_VER}.tgz
  mv onnxruntime-linux-x64-${ONNX_VER} /opt/
  ONNX_DIR=/opt/onnxruntime-linux-x64-$ONNX_VER
  fi

  mkdir /home/ldmx-sw

  # define environment
  if [ "$DEVTOOLSET" != "S" ]; then
    echo "source /opt/rh/devtoolset-$DEVTOOLSET/enable" >> $SINGULARITY_ENVIRONMENT
  fi
  echo "source /opt/rh/rh-python36/enable" >> $SINGULARITY_ENVIRONMENT
  echo "export ROOTDIR=/opt/root-$ROOTVERSION" >> $SINGULARITY_ENVIRONMENT
  echo "export G4DIR=/opt/geant4-$GEANT4_TAG" >> $SINGULARITY_ENVIRONMENT
  echo "export XERCESC_DIR=/opt/xerces-c-$XERCES_VER" >> $SINGULARITY_ENVIRONMENT
  echo "export export BOOST_DIR=/opt/boost-${BOOST_VER//[.]/_}" >> $SINGULARITY_ENVIRONMENT
  if [ ${ONNX_GPU} == "ON" ]; then
  echo "export ONNX_DIR=/opt/onnxruntime-linux-x64-gpu-$ONNX_VER" >> $SINGULARITY_ENVIRONMENT
  fi
  if [ ${ONNX_GPU} == "OFF" ]; then
  echo "export ONNX_DIR=/opt/onnxruntime-linux-x64-$ONNX_VER" >> $SINGULARITY_ENVIRONMENT
  fi

  # define environment
  LDMX_ENV_FILE=/etc/ldmxenv.sh
  if [ "$DEVTOOLSET" != "S" ]; then
    echo "source /opt/rh/devtoolset-$DEVTOOLSET/enable" >> $LDMX_ENV_FILE
  fi
  echo "source /opt/rh/rh-python36/enable" >> $LDMX_ENV_FILE
  echo "export LDMXSW_DIR=$LDMXDIR" >> $LDMX_ENV_FILE
  echo "source $G4DIR/bin/geant4.sh" >> $LDMX_ENV_FILE
  echo "source $ROOTDIR/bin/thisroot.sh" >> $LDMX_ENV_FILE
  echo "export LD_LIBRARY_PATH=\$LDMXSW_DIR/lib:$XERCESC_DIR/lib:$ONNX_DIR/lib:\$LD_LIBRARY_PATH" >> $LDMX_ENV_FILE
  echo "export PYTHONPATH=\$LDMXSW_DIR/lib/python:\$PYTHONPATH" >> $LDMX_ENV_FILE
  echo "export PATH=\$LDMXSW_DIR/bin:\$PATH" >> $LDMX_ENV_FILE
  echo "export LDMXDIR=/home/ldmx-sw" >> $LDMX_ENV_FILE
  echo "export LDMX_INSTALL_PREFIX=$LDMXDIR" >> $LDMX_ENV_FILE
  echo "export BOOST_DIR=/opt/boost-${BOOST_VER//[.]/_}" >> $LDMX_ENV_FILE
  rm -rf /buildroot
  mkdir /afs
 
  LDMX_FIRST_SETUP=/home/FirstSetup.sh
  echo "git clone https://github.com/LDMX-Software/ldmx-sw.git" >> $LDMX_FIRST_SETUP
  echo "cd ldmx-sw" >> $LDMX_FIRST_SETUP
  echo "mkdir build" >> $LDMX_FIRST_SETUP
  echo "cd build" >> $LDMX_FIRST_SETUP
  echo "export LDMXDIR=/home/ldmx-sw" >> $LDMX_FIRST_SETUP
  echo "cmake -DGeant4_DIR=$G4DIR -DXercesC_DIR=$XERCESC_DIR -DXercesC_INCLUDE_DIR=$XERCESC_DIR/include -DPYTHON_EXECUTABLE=/opt/rh/rh-python36/root/usr/bin/python -DROOT_DIR=$ROOTDIR -DONNXRUNTIME_ROOT=$ONNX_DIR -DCMAKE_INSTALL_PREFIX=$LDMXDIR .." >> $LDMX_FIRST_SETUP
  echo "make install" >> $LDMX_FIRST_SETUP


%environment
  source /etc/ldmxenv.sh

%labels
  Description Singularity Image with build environment for LDMX software
  Maintainers Andrii Salnikov <andrii.salnikov@hep.lu.se>, Geoffrey Mullier <geoffrey.mullier@hep.lu.se>

%help
   Singularity Image with build environment for LDMX software.
   It contains pre-built Xerces-C, Geant4 (patched LDMX version), ONNXruntime and ROOT.

   LDMX software can be build based on this image.

